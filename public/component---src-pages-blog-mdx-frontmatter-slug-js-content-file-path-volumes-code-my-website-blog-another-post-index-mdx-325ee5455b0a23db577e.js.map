{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-volumes-code-my-website-blog-another-post-index-mdx-325ee5455b0a23db577e.js","mappings":"4MAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,wCAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wCCLA,MAAMU,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,MAAMC,GAAQC,EAAAA,EAAAA,GAASH,EAAKI,IAAIC,YAAYC,YAC5C,OAAOX,EAAAA,cAAoBY,EAAAA,EAAQ,CACjCC,UAAWR,EAAKI,IAAIC,YAAYI,OAC/Bd,EAAAA,cAAoB,IAAK,KAAM,WAAYK,EAAKI,IAAIC,YAAYK,MAAOf,EAAAA,cAAoBgB,EAAAA,EAAa,CACzGT,MAAOA,EACPU,UAAWC,EAAAA,KACTlB,EAAAA,cAAoB,UAAW,CACjCmB,MAAO,wEACNb,EAAUN,EAAAA,cAAoB,KAAM,CACrCoB,MAAO,QACPD,MAAO,QACN,oBAAqBnB,EAAAA,cAAoB,IAAK,CAC/CmB,MAAO,yBACNnB,EAAAA,cAAoB,OAAQ,CAC7BmB,MAAO,QACNnB,EAAAA,cAAoB,IAAK,CAC1BqB,KAAM,6BACNC,OAAQ,SACPtB,EAAAA,cAAoB,MAAO,CAC5BuB,IAAK,2HACLC,IAAK,SACLC,OAAQ,KACRC,MAAO,SACH1B,EAAAA,cAAoB,OAAQ,CAChCmB,MAAO,QACNnB,EAAAA,cAAoB,IAAK,CAC1BqB,KAAM,+BACNC,OAAQ,SACPtB,EAAAA,cAAoB,MAAO,CAC5BuB,IAAK,6HACLC,IAAK,SACLC,OAAQ,KACRC,MAAO,SACH1B,EAAAA,cAAoB,OAAQ,CAChCmB,MAAO,QACNnB,EAAAA,cAAoB,IAAK,CAC1BqB,KAAM,qCACNC,OAAQ,SACPtB,EAAAA,cAAoB,MAAO,CAC5BuB,IAAK,iIACLC,IAAK,aACLC,OAAQ,KACRC,MAAO,SACH1B,EAAAA,cAAoB,OAAQ,CAChCmB,MAAO,QACNnB,EAAAA,cAAoB,IAAK,CAC1BqB,KAAM,2BACNC,OAAQ,SACPtB,EAAAA,cAAoB,MAAO,CAC5BuB,IAAK,0HACLC,IAAK,aACLC,OAAQ,KACRC,MAAO,WACF,EAoBIC,EAAOC,IAAA,IAAC,KAACvB,GAAK,SAAKL,EAAAA,cAAoB6B,EAAAA,EAAK,CACvDf,MAAOT,EAAKI,IAAIC,YAAYI,OAC5B,EAEa,SAASgB,EAAiBrC,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoB+B,EAAqBtC,GACvF,C,sECvDO,MAAMuC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlC,GAC/B,MAAMmC,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfjC,EACFA,EAAWmC,GAGb,IAAIA,KAAsBnC,IAChC,CAACmC,EAAmBnC,GACzB,C","sources":["webpack://my-website/./blog/another-post/index.mdx","webpack://my-website/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://my-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Let's build a React App from scratch!\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Volumes/Code/my-website/blog/another-post/index.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Seo from \"../../components/seo\";\nimport {blogImg} from \"../about.module.css\";\nconst BlogPost = ({data, children}) => {\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, \"Posted: \", data.mdx.frontmatter.date), React.createElement(GatsbyImage, {\n    image: image,\n    className: blogImg\n  }), React.createElement(\"section\", {\n    class: \"bg-slate-100 w-5/6 shadow-2xl p-8 font-serif leading-relaxed text-lg\"\n  }, children, React.createElement(\"h3\", {\n    align: \"right\",\n    class: \"mr-4\"\n  }, \" Connect With Me\"), React.createElement(\"p\", {\n    class: \"flex justify-end mt-4\"\n  }, React.createElement(\"span\", {\n    class: \"px-4\"\n  }, React.createElement(\"a\", {\n    href: \"https://twitter.com/jrowah\",\n    target: \"blank\"\n  }, React.createElement(\"img\", {\n    src: \"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/twitter.svg\",\n    alt: \"jrowah\",\n    height: \"20\",\n    width: \"30\"\n  }))), React.createElement(\"span\", {\n    class: \"px-4\"\n  }, React.createElement(\"a\", {\n    href: \"https://instagram.com/jrowah\",\n    target: \"blank\"\n  }, React.createElement(\"img\", {\n    src: \"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/instagram.svg\",\n    alt: \"jrowah\",\n    height: \"20\",\n    width: \"30\"\n  }))), React.createElement(\"span\", {\n    class: \"px-4\"\n  }, React.createElement(\"a\", {\n    href: \"https://linkedin.com/in/james-rowa\",\n    target: \"blank\"\n  }, React.createElement(\"img\", {\n    src: \"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/linked-in-alt.svg\",\n    alt: \"james rowa\",\n    height: \"20\",\n    width: \"30\"\n  }))), React.createElement(\"span\", {\n    class: \"px-4\"\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/rowah\",\n    target: \"blank\"\n  }, React.createElement(\"img\", {\n    src: \"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/github.svg\",\n    alt: \"james rowa\",\n    height: \"20\",\n    width: \"30\"\n  }))))));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","image","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","date","GatsbyImage","className","blogImg","class","align","href","target","src","alt","height","width","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
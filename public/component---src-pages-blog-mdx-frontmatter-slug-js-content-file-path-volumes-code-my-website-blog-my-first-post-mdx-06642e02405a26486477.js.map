{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-volumes-code-my-website-blog-my-first-post-mdx-06642e02405a26486477.js","mappings":"4MAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,oGAAqGK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,SAAU,KAAM,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,MAAOK,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,QAAS,KAAMG,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,WAAY,QAASG,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,SAAU,4BACze,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCTA,MAAMY,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAON,EAAAA,cAAoBO,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BX,EAAAA,cAAoB,IAAK,KAAMK,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAY5DO,EAAOC,IAAA,IAAC,KAACT,GAAK,SAAKL,EAAAA,cAAoBe,EAAAA,EAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiBzB,GACvC,OAAOS,EAAAA,cAAoBG,EAAUZ,EAAOS,EAAAA,cAAoBiB,EAAqB1B,GACvF,C,yDCqBA,IApCe,IAA8B,IAA7B,UAAEiB,EAAS,SAAEF,GAAU,EACrC,MAAMD,GAAOa,EAAAA,EAAAA,IAAe,cAS5B,OACE,uBAAKC,UAAWC,EAAAA,IACd,0BAAQD,UAAWE,EAAAA,WAAYhB,EAAKiB,KAAKC,aAAaZ,OACtD,2BACE,sBAAIQ,UAAWK,EAAAA,IACb,sBAAIL,UAAWM,EAAAA,IACb,gBAAC,KAAI,CAACC,GAAG,IAAIP,UAAWQ,EAAAA,IAAY,UAItC,sBAAIR,UAAWM,EAAAA,IACb,gBAAC,KAAI,CAACC,GAAG,YAAU,YAErB,sBAAIP,UAAWM,EAAAA,IACb,gBAAC,KAAI,CAACC,GAAG,SAAO,YAItB,4BACE,sBAAIP,UAAWS,EAAAA,IAAUpB,GACzB,2BACCF,GAEC,C,+CCvBV,IAlBY,IAAgB,IAAf,MAAEK,GAAO,EACpB,MAAMN,GAAOa,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BACGb,EAAKiB,KAAKC,aAAaZ,MAAK,MAAKA,EAC5B,C,wMChBL,IAAIS,EAAY,kCACZQ,EAAU,gCACVH,EAAc,sCACdE,EAAc,sCACdH,EAAW,kCACXK,EAAU,gCAEVC,EAAkB,uC,sECwBtB,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBjC,GAC/B,MAAMkC,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfhC,EACFA,EAAWkC,GAGb,IAAIA,KAAsBlC,IAChC,CAACkC,EAAmBlC,GACzB,C","sources":["webpack://my-website/./blog/my-first-post.mdx","webpack://my-website/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://my-website/./src/components/layout.js","webpack://my-website/./src/components/seo.js","webpack://my-website/./src/components/layout.module.css","webpack://my-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! It is about the role my friends played in who I have become Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"To \", React.createElement(_components.strong, null, \"Alex\"), \", \", React.createElement(_components.strong, null, \"Gilbert\"), \" and \", React.createElement(_components.strong, null, \"Peter\"), \", this is for you guys!.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Volumes/Code/my-website/blog/my-first-post.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle,\n} from \"./layout.module.css\";\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/journey\">Journey</Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\">Blogs</Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        <h2></h2>\n        {children}\n      </main>\n    </div>\n  );\n};\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {data.site.siteMetadata.title} | {title}\n    </title>\n  );\n};\n\nexport default Seo;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var project = \"layout-module--project--cb1db\";\nexport var social = \"layout-module--social--4a791\";\nexport var socialcontainer = \"layout-module--socialcontainer--31023\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","className","container","siteTitle","site","siteMetadata","navLinks","navLinkItem","to","navLinkText","heading","project","socialcontainer","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}